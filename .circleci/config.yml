version: 2 # use CircleCI 2.0
jobs: # basic units of work in a run
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.12
      - image: neo4j:3.5.1
        environment: # environment variables for primary container
          NEO4J_dbms_security_auth__enabled: false
          POSTGRES_DB: circle_test
    parallelism: 2

    environment: # environment variables for the build itself
      TEST_RESULTS: /tmp/test-results # path to where test results will be saved

    steps: # steps that comprise the `build` job
      - run:
          name: build seabolt for the neo4j bolt client
          command: >
            cd .. ;
            git clone -b v1.7.2 https://github.com/neo4j-drivers/seabolt.git seabolt_test_dir ;
            cd  seabolt_test_dir ;
            cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_LIBDIR=lib .. && cmake --build . --target install ;
            cd .. ;
            cd project
      - checkout # check out source code to working directory
      - run: mkdir -p $TEST_RESULTS # create the test results directory

      #  Wait for Neo4j to be ready before proceeding
      - run:
          name: Waiting for neo4j to be ready
          command: sleep 15

      - run:
          name: Run unit tests

          # store the results of our tests in the $TEST_RESULTS directory
          command: |
            PACKAGE_NAMES=$(go list ./... | circleci tests split --split-by=timings --timings-type=classname)
            gotestsum --junitfile ${TEST_RESULTS}/gotestsum-report.xml -- $PACKAGE_NAMES

      - store_test_results: # upload test results for display in Test Summary
          path: /tmp/test-results
workflows:
  version: 2
  build-workflow:
    jobs:
      - build
