version: 2.1 # use CircleCI 2.0
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: alexmorten/seabolt-base
    docker:
      - image: circleci/buildpack-deps:stretch
jobs: # basic units of work in a run
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: alexmorten/seabolt-base:latest
      - image: neo4j:3.5.1
        environment: # environment variables for primary container
          NEO4J_dbms_security_auth__enabled: false
          POSTGRES_DB: circle_test
    parallelism: 2

    environment: # environment variables for the build itself
      TEST_RESULTS: /tmp/test-results # path to where test results will be saved

    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - run: mkdir -p $TEST_RESULTS # create the test results directory

      #  Wait for Neo4j to be ready before proceeding
      - run:
          name: Waiting for neo4j to be ready
          command: sleep 15

      - run:
          name: Run unit tests

          # store the results of our tests in the $TEST_RESULTS directory
          command: |
            PACKAGE_NAMES=$(go list ./... | circleci tests split --split-by=timings --timings-type=classname)
            gotestsum --junitfile ${TEST_RESULTS}/gotestsum-report.xml -- $PACKAGE_NAMES

      - store_test_results: # upload test results for display in Test Summary
          path: /tmp/test-results
  build-seabolt-image:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t $IMAGE_NAME -f Dockerfile.seabolt-base .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish-seabolt-image:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Push image to docker hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:latest
workflows:
  version: 2
  build-workflow:
    jobs:
      - build
      - build-seabolt-image:
          filters:
            branches:
              only: master
      - publish-seabolt-image:
          requires:
            - build-seabolt-image
          filters:
            branches:
              only: master
